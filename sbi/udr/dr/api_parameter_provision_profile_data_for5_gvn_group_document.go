/*
Nudr_DataRepository API OpenAPI file

Unified Data Repository Service. Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 2.1.7
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.
// Templates and customized generator are developed by Quang Tung Thai (tqtung@etri.re.kr)

package dr

import (
	"etri5gc/sbi"
	"etri5gc/sbi/models"
	"etri5gc/sbi/utils"
	"fmt"
	"net/http"
)

/*
@param client sbi.ConsumerClient - for encoding request/encoding response and sending request to remote agent.
@param extGroupIds List of external VN group identifiers
@param supportedFeatures Supported Features
@return *models.Pp5gVnGroupProfileData,
*/
func Query5GVNGroupPPData(client sbi.ConsumerClient, extGroupIds []string, supportedFeatures string) (result models.Pp5gVnGroupProfileData, err error) {

	//create a request
	req := sbi.DefaultRequest()
	req.Method = http.MethodGet

	req.Path = fmt.Sprintf("%s/subscription-data/group-data/5g-vn-groups/pp-profile-data", ServicePath)
	extGroupIdsStr := utils.Param2String(extGroupIds)
	if len(extGroupIdsStr) > 0 {
		req.QueryParams.Add("ext-group-ids", extGroupIdsStr)
	}
	if len(supportedFeatures) > 0 {
		req.QueryParams.Add("supported-features", supportedFeatures)
	}
	req.HeaderParams["Accept"] = "application/json"
	//send the request
	var resp *sbi.Response
	if resp, err = client.Send(req); err != nil {
		return
	}

	//handle the response
	if resp.StatusCode >= 300 {
		if resp.Body != nil {
			if err = client.DecodeResponse(resp); err == nil {
				err = sbi.NewApiError(resp.StatusCode, resp.Status, resp.Body)
			}
			return
		} else {
			err = fmt.Errorf("%d is unknown to Query5GVNGroupPPData", resp.StatusCode)
			return
		}
	}

	resp.Body = &result
	if err = client.DecodeResponse(resp); err == nil {
		err = sbi.NewApiError(resp.StatusCode, resp.Status, resp.Body)
	}
	return
}

//sbi producer handler for Query5GVNGroupPPData
func OnQuery5GVNGroupPPData(ctx sbi.RequestContext, handler interface{}) (resp sbi.Response) {
	prod := handler.(ParameterProvisionProfileDataFor5GVNGroupDocumentApiHandler)

	extGroupIdsStr := ctx.Param("ext-group-ids")
	var extGroupIds []string
	var extGroupIdsErr error
	if extGroupIds, extGroupIdsErr = utils.String2ArrayOfstring(extGroupIdsStr); extGroupIdsErr != nil {
		resp.SetApiError(sbi.ApiErrFromProb(&models.ProblemDetails{
			Title:  "Bad request",
			Status: http.StatusBadRequest,
			Detail: extGroupIdsErr.Error(),
		}))
		return
	}

	supportedFeatures := ctx.Param("supported-features")

	var apierr *sbi.ApiError
	var successCode int32
	var result models.Pp5gVnGroupProfileData

	successCode, result, apierr = prod.DR_HandleQuery5GVNGroupPPData(extGroupIds, supportedFeatures)

	if apierr != nil {
		resp.SetApiError(apierr)
	} else {
		resp.SetBody(int(successCode), &result)
	}
	return
}

type ParameterProvisionProfileDataFor5GVNGroupDocumentApiHandler interface {
	DR_HandleQuery5GVNGroupPPData(extGroupIds []string, supportedFeatures string) (successCode int32, result models.Pp5gVnGroupProfileData, err *sbi.ApiError)
}
