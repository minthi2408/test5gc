/*
Nudr_GroupIDmap

Unified Data Repository Service for NF-Group ID retrieval. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 1.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.
// Templates and customized generator are developed by Quang Tung Thai (tqtung@etri.re.kr)

package group

import (
	"etri5gc/sbi"
	"etri5gc/sbi/models"
	"etri5gc/sbi/utils"
	"net/http"
)

//sbi producer handler for GetNfGroupIDs
func OnGetNfGroupIDs(ctx sbi.RequestContext, handler interface{}) (resp sbi.Response) {
	prod := handler.(Producer)

	nfTypeStr := ctx.Param("nf-type")
	if len(nfTypeStr) == 0 {
		//nfType is required
		resp.SetApiError(sbi.ApiErrFromProb(&models.ProblemDetails{
			Title:  "Bad request",
			Status: http.StatusBadRequest,
			Detail: "nfType is required",
		}))
		return
	}
	var nfType []models.NFType
	var nfTypeErr error
	if nfType, nfTypeErr = utils.String2ArrayOfNFType(nfTypeStr); nfTypeErr != nil {
		resp.SetApiError(sbi.ApiErrFromProb(&models.ProblemDetails{
			Title:  "Bad request",
			Status: http.StatusBadRequest,
			Detail: nfTypeErr.Error(),
		}))
		return
	}

	subscriberId := ctx.Param("subscriberId")
	if len(subscriberId) == 0 {
		//subscriberId is required
		resp.SetApiError(sbi.ApiErrFromProb(&models.ProblemDetails{
			Title:  "Bad request",
			Status: http.StatusBadRequest,
			Detail: "subscriberId is required",
		}))
		return
	}

	var apierr *sbi.ApiError
	var successCode int32
	var result map[string]string

	successCode, result, apierr = prod.GROUP_HandleGetNfGroupIDs(nfType, subscriberId)

	if apierr != nil {
		resp.SetApiError(apierr)
	} else {
		resp.SetBody(int(successCode), &result)
	}
	return
}

type Producer interface {
	GROUP_HandleGetNfGroupIDs(nfType []models.NFType, subscriberId string) (successCode int32, result map[string]string, err *sbi.ApiError)
}
