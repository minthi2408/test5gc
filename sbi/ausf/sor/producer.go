/*
Nausf_SoRProtection Service

AUSF SoR Protection Service. Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 1.1.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.
// Templates and customized generator are developed by Quang Tung Thai (tqtung@etri.re.kr)

package sor

import (
	"etrib5gc/sbi"
	"etrib5gc/sbi/models"
	"net/http"
)

//sbi producer handler for SupiUeSorPost
func OnSupiUeSorPost(ctx sbi.RequestContext, handler interface{}) (resp sbi.Response) {
	prod := handler.(Producer)

	supi := ctx.Param("supi")
	if len(supi) == 0 {
		//supi is required
		resp.SetApiError(sbi.ApiErrFromProb(&models.ProblemDetails{
			Title:  "Bad request",
			Status: http.StatusBadRequest,
			Detail: "supi is required",
		}))
		return
	}

	var input models.SorInfo

	var apierr *sbi.ApiError
	var successCode int32
	var result models.SorSecurityInfo

	if prob := ctx.DecodeRequest(&input); prob == nil {
		successCode, result, apierr = prod.SOR_HandleSupiUeSorPost(supi, input)
	} else {
		apierr = sbi.ApiErrFromProb(prob)
	}

	if apierr != nil {
		resp.SetApiError(apierr)
	} else {
		resp.SetBody(int(successCode), &result)
	}
	return
}

type Producer interface {
	SOR_HandleSupiUeSorPost(supi string, body models.SorInfo) (successCode int32, result models.SorSecurityInfo, err *sbi.ApiError)
}
